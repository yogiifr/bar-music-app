{"version":3,"sources":["../src/authorization-errors.ts"],"sourcesContent":["import type { __experimental_ReverificationConfig } from '@clerk/types';\n\ntype ClerkError<T> = {\n  clerk_error: T;\n};\n\ntype ReverificationMismatchError<M extends { metadata?: any } = { metadata: unknown }> = ClerkError<\n  {\n    type: 'forbidden';\n    reason: 'reverification-mismatch';\n  } & M\n>;\n\nconst __experimental_reverificationMismatch = <MC extends __experimental_ReverificationConfig>(missingConfig?: MC) =>\n  ({\n    clerk_error: {\n      type: 'forbidden',\n      reason: 'reverification-mismatch',\n      metadata: {\n        reverification: missingConfig,\n      },\n    },\n  }) satisfies ReverificationMismatchError;\n\nconst __experimental_reverificationMismatchResponse = (\n  ...args: Parameters<typeof __experimental_reverificationMismatch>\n) =>\n  new Response(JSON.stringify(__experimental_reverificationMismatch(...args)), {\n    status: 403,\n  });\n\nconst __experimental_isReverificationHint = (\n  result: any,\n): result is ReturnType<typeof __experimental_reverificationMismatch> => {\n  return (\n    result &&\n    typeof result === 'object' &&\n    'clerk_error' in result &&\n    result.clerk_error?.type === 'forbidden' &&\n    result.clerk_error?.reason === 'reverification-mismatch'\n  );\n};\n\nexport {\n  __experimental_reverificationMismatch,\n  __experimental_reverificationMismatchResponse,\n  __experimental_isReverificationHint,\n};\n"],"mappings":";AAaA,IAAM,wCAAwC,CAAiD,mBAC5F;AAAA,EACC,aAAa;AAAA,IACX,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,UAAU;AAAA,MACR,gBAAgB;AAAA,IAClB;AAAA,EACF;AACF;AAEF,IAAM,gDAAgD,IACjD,SAEH,IAAI,SAAS,KAAK,UAAU,sCAAsC,GAAG,IAAI,CAAC,GAAG;AAAA,EAC3E,QAAQ;AACV,CAAC;AAEH,IAAM,sCAAsC,CAC1C,WACuE;AAjCzE;AAkCE,SACE,UACA,OAAO,WAAW,YAClB,iBAAiB,YACjB,YAAO,gBAAP,mBAAoB,UAAS,iBAC7B,YAAO,gBAAP,mBAAoB,YAAW;AAEnC;","names":[]}